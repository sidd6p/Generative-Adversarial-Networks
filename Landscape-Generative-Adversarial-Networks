{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":1217826,"sourceType":"datasetVersion","datasetId":298806}],"dockerImageVersionId":30698,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"## Imports","metadata":{}},{"cell_type":"code","source":"import torch\nimport os\n\nimport torchvision.transforms as T\nimport matplotlib.pyplot as plt  \n\nfrom torchvision.datasets import ImageFolder\nfrom torch.utils.data import Dataset, DataLoader\nfrom PIL import Image\nfrom torchvision.utils import make_grid","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-05-11T11:33:22.943182Z","iopub.execute_input":"2024-05-11T11:33:22.943992Z","iopub.status.idle":"2024-05-11T11:33:30.508638Z","shell.execute_reply.started":"2024-05-11T11:33:22.943940Z","shell.execute_reply":"2024-05-11T11:33:30.507305Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Data","metadata":{}},{"cell_type":"code","source":"data_path = \"/kaggle/input/landscape-pictures\"","metadata":{"execution":{"iopub.status.busy":"2024-05-11T11:33:35.937689Z","iopub.execute_input":"2024-05-11T11:33:35.938224Z","iopub.status.idle":"2024-05-11T11:33:35.943720Z","shell.execute_reply.started":"2024-05-11T11:33:35.938192Z","shell.execute_reply":"2024-05-11T11:33:35.942299Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"image_size = 224\nstats = (0.5, 0.5, 0.5), (0.5, 0.5, 0.5)\nstats = (0.5, 0.5, 0.5), (0.5, 0.5, 0.5) \nbatch_size = 128\n\ntransformer = T.Compose([\n    T.Resize(image_size),\n    T.CenterCrop(image_size),\n    T.RandomHorizontalFlip(.5),\n    T.RandAugment(num_ops=2, magnitude=15),\n    T.ToTensor(),\n    T.Normalize(*stats)\n])","metadata":{"execution":{"iopub.status.busy":"2024-05-11T11:33:37.405446Z","iopub.execute_input":"2024-05-11T11:33:37.405894Z","iopub.status.idle":"2024-05-11T11:33:37.417030Z","shell.execute_reply.started":"2024-05-11T11:33:37.405862Z","shell.execute_reply":"2024-05-11T11:33:37.415814Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"class CustomImageDataset(Dataset):\n    def __init__(self, root_dir, transform=None):\n        self.root_dir = root_dir\n        self.transform = transform\n        self.images = [os.path.join(root_dir, img) for img in os.listdir(root_dir) if img.endswith(('png', 'jpg', 'jpeg'))]\n\n    def __len__(self):\n        return len(self.images)\n\n    def __getitem__(self, idx):\n        img_path = self.images[idx]\n        image = Image.open(img_path).convert('RGB')\n        if self.transform:\n            image = self.transform(image)\n        return image\n\ndataset = CustomImageDataset(data_path, transform=transformer)\n","metadata":{"execution":{"iopub.status.busy":"2024-05-11T11:33:38.942238Z","iopub.execute_input":"2024-05-11T11:33:38.942843Z","iopub.status.idle":"2024-05-11T11:33:39.536385Z","shell.execute_reply.started":"2024-05-11T11:33:38.942808Z","shell.execute_reply":"2024-05-11T11:33:39.535173Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"dataset_loader = DataLoader(dataset, batch_size, shuffle=True, num_workers=3, pin_memory=True)","metadata":{"execution":{"iopub.status.busy":"2024-05-11T11:33:41.159177Z","iopub.execute_input":"2024-05-11T11:33:41.160559Z","iopub.status.idle":"2024-05-11T11:33:41.165919Z","shell.execute_reply.started":"2024-05-11T11:33:41.160510Z","shell.execute_reply":"2024-05-11T11:33:41.164775Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def denorm(img_tensors):\n    return img_tensors * stats[1][0] + stats[0][0]\n\ndef show_images(images, nmax=2):\n    plt.imshow(make_grid(denorm(images[:nmax]), nrow=2).permute(1, 2, 0))\n\ndef show_batch(dl):\n    for images in dl:\n        show_images(images)\n        break","metadata":{"execution":{"iopub.status.busy":"2024-05-11T11:33:42.747348Z","iopub.execute_input":"2024-05-11T11:33:42.747723Z","iopub.status.idle":"2024-05-11T11:33:42.754935Z","shell.execute_reply.started":"2024-05-11T11:33:42.747695Z","shell.execute_reply":"2024-05-11T11:33:42.753668Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"show_batch(dataset_loader)","metadata":{"execution":{"iopub.status.busy":"2024-05-11T11:33:44.753188Z","iopub.execute_input":"2024-05-11T11:33:44.753608Z","iopub.status.idle":"2024-05-11T11:33:54.469791Z","shell.execute_reply.started":"2024-05-11T11:33:44.753567Z","shell.execute_reply":"2024-05-11T11:33:54.468585Z"},"trusted":true},"execution_count":null,"outputs":[]}]}